name: Build ESP-IDF & Release BIN

on:
  push:
    branches:
      - '**'  # Runs on every push; change to ['main'] if you want only main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set version string
        id: set_version
        run: |
          VERSION="$(date -u +%Y%m%d%H%M%S)-${GITHUB_SHA::7}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Install ESP-IDF
        uses: espressif/install-esp-idf-action@v1

      - name: Build firmware
        run: |
          idf.py fullclean || true
          idf.py build

      - name: Find main firmware bin
        id: find_bin
        run: |
          BIN_PATH=$(find build -type f -name "*.bin" | grep -E "/surf-o-meter.bin$")
          if [ -z "$BIN_PATH" ]; then
            echo "Main firmware bin not found!"
            exit 1
          fi
          echo "BIN_PATH=$BIN_PATH" >> $GITHUB_ENV

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Firmware ${{ env.VERSION }}
          body: |
            Automatic firmware build from commit ${{ github.sha }}
            Built at (UTC): ${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload firmware bin to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.BIN_PATH }}
          asset_name: firmware.bin
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

